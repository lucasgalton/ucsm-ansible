---
# Example Playbook: VLAN configuration using the [ucs] hosts group
- hosts: ucs
  connection: local
  vars:
    uri_rhs: &uri_rhs
      user: "{{ rhs.username }}"
      password: "{{ rhs.password }}"
      validate_certs: no
      force_basic_auth: yes
    ucs_credentials: &ucs_credentials
      hostname: "{{ inventory_hostname }}"
      username: "{{ username | default(omit) }}"
      password: "{{ password }}"
    loop_wanted_node: &loop_wanted_node
      loop: "{{ wanted_nodes|flatten(levels=1) }}"
      loop_control:
        label: "{{ item.name }}"

  tasks:
    - name: Create service profile from template
      ucs_service_profile_from_template:
        <<: *ucs_credentials
        name: "{{ item.name }}"
        source_template: ceph-node
      <<: *loop_wanted_node

    - name: Gather facts about services profiles
      ucs_service_profile_info:
        <<: *ucs_credentials

    - name: Get host groups
      uri:
        <<: *uri_rhs
        method: GET
        url: "{{ rhs.url }}/api/hostgroups?search=name%3D%22{{ item.hostgroup|urlencode() }}%22"
      register: rhs_hostgroups_response
      <<: *loop_wanted_node

    - name: Save host groups IDs
      vars:
        hash: "{{ item.item.name | hash('md5') }}"
      set_fact:
        rhs_hostgroup: "{{ rhs_hostgroup | default({}) | combine({ hash : item.json.results[0].id }) }}"
      loop: "{{ rhs_hostgroups_response.results|flatten(levels=1) }}"
      loop_control:
        label: "{{ item.item.name }}"

    - name: Get location ID
      uri:
        <<: *uri_rhs
        method: GET
        url: "{{ rhs.url }}/api/locations?search=name%3D%22{{ item.location|urlencode() }}%22"
      register: rhs_locations_response
      <<: *loop_wanted_node

    - name: Save location id
      vars:
        hash: "{{ item.item.name | hash('md5') }}"
      set_fact:
        rhs_location: "{{ rhs_location | default({}) | combine({ hash: item.json.results[0].id }) }}"
      loop: "{{ rhs_locations_response.results|flatten(levels=1) }}"
      loop_control:
        label: "{{ item.item.name }}"

    - name: Get organization ID
      uri:
        <<: *uri_rhs
        method: GET
        url: "{{ rhs.url }}/api/organizations?search=name%3D%22{{ item.organization|urlencode() }}%22"
      register: rhs_organizations_response
      <<: *loop_wanted_node

    - name: Save organization id
      vars:
        hash: "{{ item.item.name | hash('md5') }}"
      set_fact:
        rhs_organization: "{{ rhs_organization | default({}) | combine({ hash : item.json.results[0].id }) }}"
      loop: "{{ rhs_organizations_response.results|flatten(levels=1) }}"
      loop_control:
        label: "{{ item.item.name }}"

    - name: Get environment ID
      uri:
        <<: *uri_rhs
        method: GET
        url: "{{ rhs.url }}/api/environments?search=name%3D%22{{ item.environment|urlencode() }}%22"
      register: rhs_environments_response
      <<: *loop_wanted_node

    - name: Save environment id
      vars:
        hash: "{{ item.item.name | hash('md5') }}"
      set_fact:
        rhs_environment: "{{ rhs_environment | default({}) | combine({ hash : item.json.results[0].id }) }}"
      loop: "{{ rhs_environments_response.results|flatten(levels=1) }}"
      loop_control:
        label: "{{ item.item.name }}"

    - name: Get subnet IDs
      uri:
        <<: *uri_rhs
        method: GET
        url: "{{ rhs.url }}/api/subnets?search=name%3D%22{{ item.1.rhs_subnet|urlencode() }}%22"
      register: rhs_subnets_response
      loop: "{{ wanted_nodes | subelements('nics') }}"
      loop_control:
        label: "{{ item.0.name }}"

    - name: Save subnet id
      set_fact:
        rhs_subnet: "{{ rhs_subnet | default({}) | combine({item.json.results[0].name : item.json.results[0].id}) }}"
      loop: "{{ rhs_subnets_response.results }}"
      loop_control:
        label: "{{ item.json.results[0].name }}"

    - name: Create NICs json for non vlans NICs
      vars:
        hash: "vnic{{ item.0.name | hash('md5') }}"
        identifier: "{{ { 'identifier' : item.1.identifier } }}"
        base_attributes: "{{ item.1.rhs_attributes | default({}) }}"
        subnet: "{{ {'subnet_id' : rhs_subnet[ item.1.rhs_subnet ]} }}"
        mac: "{{ { 'mac' : ucs_sp[ item.0.name ].vnics[item.1.ucs_name].addr } }}"
        rhs_attributes: "{{ base_attributes | combine(identifier, subnet, mac) }}"
      set_fact:
        "{{ hash }}": "{{ lookup('vars', hash, default=[]) + [ rhs_attributes ] }}"
      loop: "{{ wanted_nodes | subelements('nics') }}"
      loop_control:
        label: "{{ item.0.name }} - {{ item.1.identifier }}"
      when: item.1.ucs_name is defined

    - name: Create NICs json for VLANs nics
      vars:
        hash: "vnic{{ item.0.name | hash('md5') }}"
        identifier: "{{ { 'identifier' : item.1.identifier } }}"
        base_attributes: "{{ item.1.rhs_attributes | default({}) }}"
        subnet: "{{ {'subnet_id' : rhs_subnet[ item.1.rhs_subnet ]} }}"
        rhs_attributes: "{{ base_attributes | combine(identifier, subnet) }}"
      set_fact:
        "{{ hash }}": "{{ lookup('vars', hash, default=[]) + [ rhs_attributes ] }}"
      loop: "{{ wanted_nodes | subelements('nics') }}"
      loop_control:
        label: "{{ item.0.name }} - {{ item.1.identifier }}"
      when: item.1.ucs_name is undefined

    - name: Write host post request to variable
      vars:
        hash: "{{ item.name | hash('md5') }}"
        host:
          name: "{{ item.name }}"
          hostgroup_id: "{{ rhs_hostgroup[ hash ] | int }}"
          location_id: "{{ rhs_location[ hash ] | int }}"
          organization_id: "{{ rhs_organization[ hash ] | int }}"
          environment_id: "{{ rhs_environment[ hash ] | int }}"
          interfaces_attributes: "{{ lookup('vars', 'vnic' + hash) }}"
      uri:
        <<: *uri_rhs
        method: POST
        body_format: json
        url: "{{ rhs.url }}/api/hosts"
        body: "{{ { 'host' : host } }}"
      <<: *loop_wanted_node

#    - name: Create host in RHS
#      uri:
#        <<: *uri_rhs
#        method: POST
#      <<: *loop_wanted_node
